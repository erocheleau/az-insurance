export declare const configuration: import("redux").Reducer<import("../features/configuration/configuration-state").ConfigurationState, import("redux").AnyAction>;
export declare const pagination: import("redux").Reducer<import("../features/pagination/pagination-state").PaginationState, import("redux").AnyAction>;
export declare const facetSet: import("redux").Reducer<Record<string, import("../features/facets/facet-set/interfaces/request").FacetRequest>, import("redux").AnyAction>;
export declare const facetSearchSet: import("redux").Reducer<Record<string, import("../features/facets/facet-search-set/facet-search-reducer-helpers").FacetSearchState<import("../api/search/facet-search/specific-facet-search/specific-facet-search-response").SpecificFacetSearchResponse>>, import("redux").AnyAction>;
export declare const search: import("redux").Reducer<import("../features/search/search-state").SearchState, import("redux").AnyAction>;
export declare const folding: import("redux").Reducer<import("../features/folding/folding-state").FoldingState, import("redux").AnyAction>;
export declare const dateFacetSet: import("redux").Reducer<Record<string, import("../features/facets/range-facets/date-facet-set/interfaces/request").DateFacetRequest>, import("redux").AnyAction>;
export declare const facetOrder: import("redux").Reducer<import("../features/facets/facet-order/facet-order-state").FacetOrderState, import("redux").AnyAction>;
export declare const numericFacetSet: import("redux").Reducer<Record<string, import("../features/facets/range-facets/numeric-facet-set/interfaces/request").NumericFacetRequest>, import("redux").AnyAction>;
export declare const categoryFacetSet: import("redux").Reducer<Record<string, import("../features/facets/category-facet-set/category-facet-set-state").CategoryFacetSlice | undefined>, import("redux").AnyAction>;
export declare const facetOptions: import("redux").Reducer<import("../features/facet-options/facet-options").FacetOptions, import("redux").AnyAction>;
export declare const categoryFacetSearchSet: import("redux").Reducer<Record<string, import("../features/facets/facet-search-set/facet-search-reducer-helpers").FacetSearchState<import("../api/search/facet-search/category-facet-search/category-facet-search-response").CategoryFacetSearchResponse>>, import("redux").AnyAction>;
export declare const query: import("redux").Reducer<import("../features/query/query-state").QueryState, import("redux").AnyAction>;
export declare const advancedSearchQueries: import("redux").Reducer<import("../features/advanced-search-queries/advanced-search-queries-state").AdvancedSearchQueriesState, import("redux").AnyAction>;
export declare const querySet: import("redux").Reducer<Record<string, string>, import("redux").AnyAction>;
export declare const redirection: import("redux").Reducer<import("../features/redirection/redirection-state").RedirectionState, import("redux").AnyAction>;
export declare const querySuggest: import("redux").Reducer<Record<string, import("../features/query-suggest/query-suggest-state").QuerySuggestState | undefined>, import("redux").AnyAction>;
export declare const sortCriteria: import("redux").Reducer<string, import("redux").AnyAction>;
export declare const context: import("redux").Reducer<import("../features/context/context-state").ContextState, import("redux").AnyAction>;
export declare const didYouMean: import("redux").Reducer<import("../features/did-you-mean/did-you-mean-state").DidYouMeanState, import("redux").AnyAction>;
export declare const fields: import("redux").Reducer<import("../features/fields/fields-state").FieldsState, import("redux").AnyAction>;
export declare const pipeline: import("redux").Reducer<string, import("redux").AnyAction>;
export declare const searchHub: import("redux").Reducer<string, import("redux").AnyAction>;
export declare const debug: import("redux").Reducer<boolean, import("redux").AnyAction>;
export declare const resultPreview: import("redux").Reducer<import("../features/result-preview/result-preview-state").ResultPreviewState, import("redux").AnyAction>;
export declare const version: import("redux").Reducer<string, import("redux").AnyAction>;
export declare const triggers: import("redux").Reducer<import("../features/triggers/triggers-state").TriggerState, import("redux").AnyAction>;
export declare const questionAnswering: import("redux").Reducer<import("../features/question-answering/question-answering-state").QuestionAnsweringState, import("redux").AnyAction>;
export declare const history: (state: import("./undoable").StateWithHistory<import("../features/history/history-state").HistoryState> | undefined, action: import("redux").AnyAction) => import("./undoable").StateWithHistory<import("../features/history/history-state").HistoryState>;
export declare const recommendation: import("redux").Reducer<import("../features/recommendation/recommendation-state").RecommendationState, import("redux").AnyAction>;
export declare const productRecommendations: import("redux").Reducer<import("../features/product-recommendations/product-recommendations-state").ProductRecommendationsState, import("redux").AnyAction>;
